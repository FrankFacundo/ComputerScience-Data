---
# Source: airflow/templates/statsd/statsd-deployment.yaml
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

################################
## Airflow StatsD Deployment
#################################
kind: Deployment
apiVersion: apps/v1
metadata:
  name: masai-statsd
  labels:
    tier: airflow
    component: statsd
    release: masai
    chart: "airflow-1.3.0"
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: airflow
      component: statsd
      release: masai
  template:
    metadata:
      labels:
        tier: airflow
        component: statsd
        release: masai
    spec:
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      serviceAccountName: masai-airflow-statsd
      securityContext:
        runAsUser: 65534
      restartPolicy: Always
      containers:
        - name: statsd
          image: apache/airflow:airflow-statsd-exporter-2021.04.28-v0.17.0
          imagePullPolicy: IfNotPresent
          args:
            - "--statsd.mapping-config=/etc/statsd-exporter/mappings.yml"
          resources:
            {}
          ports:
            - name: statsd-ingest
              protocol: UDP
              containerPort: 9125
            - name: statsd-scrape
              containerPort: 9102
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9102
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9102
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
